{:deps {this/project {:local/root "."}}
 :min-bb-version "1.3.0"
 :paths ["bb" "src"]
 :tasks {:requires ([tasks])
         classpath {:doc "Print the classpath"
                    :task (tasks/print-classpath)}
         clean {:doc "Clean compilation artifacts"
                :task (shell "rm -rf target/")}
         container:build {:doc "Build a container image with docker"
                          :task (shell "docker build --tag tweedler:v0.1.0 .")}
         container:deploy {:depends [container:build]
                           :doc "Deploy the container image (TODO)"
                           :task (shell "echo TODO deploy somewhere (Fly.io, Railway)")}
         container:run {:depends [container:build]
                        :doc "Run a container with docker"
                        :task (shell "docker run -p 3001:3000 tweedler:v0.1.0")}
         db:init {:doc "Initialize the database"
                  :task (clojure "-M:migrate init")}
         db:migrate {:depends [db:init]
                     :doc "Apply all database migrations"
                     :task (clojure "-M:migrate migrate")}
         db:seed {:depends [db:migrate]
                  :doc "Seed the database with some fakes"
                  :task (clojure "-M:dev --main tweedler.db")}
         dep:search {:doc "Search a dependency"
                     ;; https://book.babashka.org/#_command_line_arguments
                     :task (shell "neil dep search" (first *command-line-args*))}
         dep:upgrade {:doc "Upgrade all dependencies"
                      :task (shell "neil dep upgrade")}
         graph {:doc "Generate a graph of dependencies between namespaces"
                :task (clojure "-X:hiera" :layout :vertical)}
         graph:copy {:depends [graph]
                     :doc "Copy the image of the graph of namespace to resources/img"
                     :task (shell "cp target/hiera/namespaces.png resources/img")}
         licenses {:doc "List all licenses of the dependencies"
                   :task (shell "neil license list")}
         serve {:doc "Serve Tweedler"
                :task (clojure "-M:dev --main tweedler.core")}
         tests {:doc "Run all tests"
                :task (clojure "-M:test")}
         uberjar:build {:doc "Package the application into an uberjar"
                        :task (clojure "-T:build uber")}
         uberjar:run {:depends [uberjar:build db:migrate]
                      :doc "Run the uberjar"
                      :task (shell "java -jar target/tweedler-1.2.0-standalone.jar")}}}
